pkg_add() {
	local cmd="$1"
	[ -z ${2+x} ] && local pkg="$cmd" || local pkg="$2"
	if ! cmd_check $cmd; then
		PACKAGES+="$pkg "
		log_debug "Going to install '${pkg}'"
	fi
}

# Make blank so test works
MGR=''
PACKAGES=''

# COMMANDS
pkg_find_all() {
	pkg_add cmake
	pkg_add curl
	pkg_add git
	pkg_add htop
	pkg_add jq
	pkg_add ranger
	pkg_add vim
	pkg_add zsh
	if [ "$MGR" == "dpkg" ]; then
		pkg_add go golang
		pkg_add gcc build-essential
		pkg_add killall psmisc
		pkg_add pip python3-pip
	elif [ "$MGR" == "pacman" ]; then
		pkg_add gcc-go
		pkg_add 
	fi
}

# DEBIAN
if cmd_check dpkg; then
	log_debug "DPKG Found"
	MGR='dpkg'
	if ! cmd_check nala; then
		log_info "Installing Nala"
        	echo "deb [arch=amd64,arm64,armhf] http://deb.volian.org/volian/ scar main" | {{ .os.super }} tee /etc/apt/sources.list.d/volian-archive-scar-unstable.list
        	curl --output - https://deb.volian.org/volian/scar.key | {{ .os.super }} tee /etc/apt/trusted.gpg.d/volian-archive-scar-unstable.gpg >"/dev/null"
        	{{ .os.super }} apt-get update >"/dev/null"
        	{{ .os.super }} apt-get install -y python3 >"/dev/null"
		# this is a really crappy work around	
		[[ $(python3 -V | awk '{print$2}' | awk -F '.' '{print $2}') -ge 10 ]] && NALA="nala" || NALA="nala-legacy"
		{{ .os.super }} apt-get install -y "${NALA}" >"/dev/null"
	fi
	log_info "Searching for packages..."
	pkg_find_all
	if [ ! -z "${PACKAGES}" ]; then
		log_info "Installing packages..."
		sleep 1
		{{ .os.super }} nala update
		{{ .os.super }} nala upgrade
		{{ .os.super }} nala install -y ${PACKAGES}
		log_info "Packages installed"
	fi
# ARCH #
elif cmd_check pacman; then
	log_debug "Pacman Found"
	{{ .os.super }} pacman -Syyu >"/dev/null"
	log_info "Searching for packages..."
	pkg_find_all
	if [ ! -z "${PACKAGES}" ]; then
		log_info "Installing packages..."
		sleep 1
		{{ .os.super }} pacman -Sy ${PACKAGES}
		log_info "Packages installed"
	fi
else
	log_warn "Package manager could not be identified; cannot install packages"
fi

unset PACKAGES
